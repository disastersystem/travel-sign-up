
Animate so that the step item is aniamted before/after/at the same time as the section.
Background styling of the active step title.

// todo: +children

READ ACTIVITIES AND CREATE NEW object IN FORM OBJECT

"Ekstra barneseng" har feil størrelse/farge.

Make the form mobile friendly.

There is a flash when clicking next.

<room-card :data="room"></room-card>

<!-- <section v-if="activeStep == 4" class="step">
    Oppsumering
</section> -->

// this.$refs.everything.classList.add('everything')
// this.$refs.everything.innerHTML = `<div class="message">${message}</div>`
console.log( this.$el.querySelector('.b-modal-card') )

Abstract the animations into a custom transition component.

Reset people selected in activities if hotel rooms gets removed.


// let people = Array(numPeople).fill({ name: '', dob: '' })
Why does this not work? It binds to the same v-model

vertical for mobile?
finish-status="success" direction="vertical"

https://vuejs.org/v2/guide/render-function.html#Nodes-Trees-and-the-Virtual-DOM

Description on every top__menu item?
description="Kontakt informasjon om bestiller"

Spambot protection.

<!-- (som i pass) -->

Display extra bed price?

https://vuejs.org/v2/guide/transitions.html#List-Entering-Leaving-Transitions

Submit button is not inside form element, this does however not matter as we're submitting the vue form object.

Make the steps not hardcoded: this will allow us to dynamically leave the activites step out.

Do not submit the total price from frontend directly to the mail, calculate the price after it hits backend
(they might want to calculate the price themselves) the price could have been modified.

Bestiller må skive info to ganger: personen vil også skrive seg på et rom. Droppe noe av info bare spørre om mail?
La et kort bli valgt som bestiller og add epost etc?

endre default value i departure dropdown?

Se på hvordan element form docs adds/removes new fields.

Kursiv faded - valgfri
Change fonts?

Auto date formatting: https://codepen.io/fauxserious/pen/XKrYvv

Thinner modal header.

form: new Form({})
Specify errors inline
	- use element ui built in error system OR our previously built class

More focus on barneseng dropdown, slik at de ser det.

Draw a map of how the elements relate to each other in the hierarcy. Then figure out
how they can be visually placed/styled to indicate the relation.

General form design rules:
	- Use inline validation after the user fills out the field (unless it helps them while in the process)
	- Don’t hide basic helper text
	- Differentiate primary from secondary actions
	- Use field length as affordance
	- Place checkboxes (and radios) underneath each other for scannability

Escape:
	- If to many hotel rooms gets selected (to many people join) then plane tickets gets a red border.
	- When activites are selected it remembers how many people has joined the trip and you've to uncheck those not joining.
	- Sammendrag av side 1 på side 2.



-------

<h5 class="body-text">{{ activity.price }},- per person</h5>

// let people = []
                
// for (let i = 1; i <= numPeople; i++) {
//     people.push( { name: '', dob: '' } )
// }


<!-- <div v-show="form.activities.length" class="section__title">
	    <h3>Ekstra Aktiviteter</h3>
	</div> -->


/**
             * 
             */
             increment(age, action, index) {
                if (age == 'children') {
                    if (action == 'increase') {
                        this.form.activities[index].amountChildren++
                    }

                    if (action == 'decrease') {
                        if (this.form.activities[index].amountChildren > 0) {
                            this.form.activities[index].amountChildren--
                        }
                    }
                }

                if (age == 'adults') {
                    if (action == 'increase') {
                        this.form.activities[index].amountAdults++
                    }

                    if (action == 'decrease') {
                        /* do not decrease below zero */
                        if (this.form.activities[index].amountAdults > 0) {
                            this.form.activities[index].amountAdults--
                        }
                    }
                }
            },


Fonts:
        <link href="https://fonts.googleapis.com/css?family=Archivo+Narrow:400" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Quicksand:300" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css?family=Work+Sans:100" rel="stylesheet">



this.$children[0].$refs.modalBody.innerHTML = 
                    `<div class="success-mode"
                        style="font-family: Raleway;
                        font-size: 20px;
                        display: flex;
                        height: 70%;
                        justify-content: center;
                        align-items: center;
                        padding: 50px;"
                    >
                        <p>${message}</p>
                    </div>`


// document.querySelector('.b-modal-card-body').style.overflow = 'auto'
// console.log(el.parentNode.parentNode.parentNode.parentNode)
// this.$el.querySelector(...)
// document.querySelector('.b-modal-card-body').style.overflow = 'hidden'
// console.log(this.$children.$children)


    // if (response.data[0] == true || response.data[0] == false) {
    // this.submitSuccess(response.data[1])



<!-- <el-form-item label="Navn">
        <span style="margin: 0; padding: 0;color: #bbb; font-style: italic; font-size: 13px;">Fornavn Etternavn</span>
        <el-input v-model="person.name" style="margin: 0;"></el-input>
    </el-form-item>

    <el-form-item label="Født">
        <span style="color: #bbb; font-style: italic; font-size: 13px;">dd.mm.yy</span>
        <el-input v-model="person.dob"></el-input>
    </el-form-item> -->



<!-- <div v-if="i % 2 === 0" class="separator__line"></div> -->